///
/// HybridNitroKeyEventSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridNitroKeyEventSpec.hpp"

// Forward declaration of `HybridNitroKeyEventSpec_cxx` to properly resolve imports.
namespace NitroKeyEvent { class HybridNitroKeyEventSpec_cxx; }





#include "NitroKeyEvent-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::nitrokeyevent {

  /**
   * The C++ part of HybridNitroKeyEventSpec_cxx.swift.
   *
   * HybridNitroKeyEventSpecSwift (C++) accesses HybridNitroKeyEventSpec_cxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridNitroKeyEventSpec_cxx can directly inherit from the C++ class HybridNitroKeyEventSpec
   * to simplify the whole structure and memory management.
   */
  class HybridNitroKeyEventSpecSwift: public virtual HybridNitroKeyEventSpec {
  public:
    // Constructor from a Swift instance
    explicit HybridNitroKeyEventSpecSwift(const NitroKeyEvent::HybridNitroKeyEventSpec_cxx& swiftPart):
      HybridObject(HybridNitroKeyEventSpec::TAG),
      _swiftPart(swiftPart) { }

  public:
    // Get the Swift part
    inline NitroKeyEvent::HybridNitroKeyEventSpec_cxx& getSwiftPart() noexcept {
      return _swiftPart;
    }

  public:
    inline size_t getExternalMemorySize() noexcept override {
      return _swiftPart.getMemorySize();
    }
    void dispose() noexcept override {
      _swiftPart.dispose();
    }

  public:
    // Properties
    

  public:
    // Methods
    inline double sum(double num1, double num2) override {
      auto __result = _swiftPart.sum(std::forward<decltype(num1)>(num1), std::forward<decltype(num2)>(num2));
      if (__result.hasError()) [[unlikely]] {
        std::rethrow_exception(__result.error());
      }
      auto __value = std::move(__result.value());
      return __value;
    }

  private:
    NitroKeyEvent::HybridNitroKeyEventSpec_cxx _swiftPart;
  };

} // namespace margelo::nitro::nitrokeyevent
