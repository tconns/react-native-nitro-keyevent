///
/// JHybridNitroKeyEventSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridNitroKeyEventSpec.hpp"





namespace margelo::nitro::nitrokeyevent {

  jni::local_ref<JHybridNitroKeyEventSpec::jhybriddata> JHybridNitroKeyEventSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridNitroKeyEventSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridNitroKeyEventSpec::initHybrid),
    });
  }

  size_t JHybridNitroKeyEventSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  void JHybridNitroKeyEventSpec::dispose() noexcept {
    static const auto method = javaClassStatic()->getMethod<void()>("dispose");
    method(_javaPart);
  }

  // Properties
  

  // Methods
  double JHybridNitroKeyEventSpec::sum(double num1, double num2) {
    static const auto method = javaClassStatic()->getMethod<double(double /* num1 */, double /* num2 */)>("sum");
    auto __result = method(_javaPart, num1, num2);
    return __result;
  }

} // namespace margelo::nitro::nitrokeyevent
